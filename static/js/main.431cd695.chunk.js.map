{"version":3,"sources":["components/ZulaNav.tsx","components/ZulaLayoutThreeColumn.tsx","pages/Home.tsx","components/ZulaSubAccount.tsx","components/ZulaSubAccountList.tsx","pages/Account.tsx","components/ZulaBookTranslationCard.tsx","pages/Books.tsx","pages/Read.tsx","pages/NewTranslation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ZulaNav","Navbar","collapseOnSelect","expand","bg","variant","Container","to","Brand","Toggle","Collapse","id","Nav","className","Link","ZulaLayoutThreeColumn","props","Row","Col","xs","content","Home","useState","data","setData","REACT_APP_API_URL","process","useEffect","fetch","then","json","jsonData","catch","error","console","JSON","stringify","ZulaSubAccount","md","Image","width","src","roundedCircle","displayName","ZulaSubAccountList","subAccounts","map","subAccount","Account","err","items","account","ZulaBookTranslationCard","Card","style","Img","Body","Title","bookTranslation","title","Text","locale","bookId","Button","Books","book","translations","Read","index","setIndex","query","URLSearchParams","useLocation","search","get","Carousel","activeIndex","onSelect","selectedIndex","e","bookImageLink","Item","uri","alt","schema","NewTranslation","renderers","materialRenderers","cells","materialCells","onChange","log","App","history","createBrowserHistory","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.431cd695.chunk.js","sourcesContent":["import {\n    Nav,\n    Navbar,\n    Container,\n } from \"react-bootstrap\";\nimport {\n    LinkContainer\n} from \"react-router-bootstrap\";\n\nexport default function ZulaNav() {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n                <LinkContainer to=\"/\"><Navbar.Brand>Zula</Navbar.Brand></LinkContainer>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <LinkContainer to=\"/account\"><Nav.Link><small className=\"text-muted\">(Customer)</small> Accounts</Nav.Link></LinkContainer>\n                        <LinkContainer to=\"/books\"><Nav.Link><small className=\"text-muted\">(Customer)</small> Books</Nav.Link></LinkContainer>\n                        <LinkContainer to=\"/new/translation\"><Nav.Link><small className=\"text-muted\">(Author)</small> New Translation</Nav.Link></LinkContainer>\n                    </Nav>\n                    <Nav>\n                        <Navbar.Brand>The Reading Tribe</Navbar.Brand>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}","import {\n    Row,\n    Col\n } from \"react-bootstrap\"\nimport ZulaNav from \"./ZulaNav\";\n\ninterface ZulaLayoutThreeColumnProps {\n    content: any\n}\n\nexport default function ZulaLayoutThreeColumn(props: ZulaLayoutThreeColumnProps) {\n    return (\n        <>\n            <ZulaNav/>\n            <div className=\"pt-3\">\n                <Row className=\"justify-content-md-center\">\n                    <Col></Col>\n                    <Col xs={9} className=\"justify-content-md-center\">\n                        {props.content}\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </div>\n        </>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport ZulaLayoutThreeColumn from \"../components/ZulaLayoutThreeColumn\";\n\nexport default function Home() {\n    const [data, setData] = useState()\n    const { REACT_APP_API_URL } = process.env;\n    useEffect(() => {\n        if (REACT_APP_API_URL) {\n            fetch(REACT_APP_API_URL+\"/users\")\n                .then(data => data.json())\n                .then(jsonData => setData(jsonData))\n                .catch(error => console.error(error))\n        }\n    }, [])\n    return (\n        <ZulaLayoutThreeColumn content={\n            <>\n                <h1>Welcome to Zula</h1>\n                <h2>The Reading Tribe</h2>\n                {data ?\n                    <pre>{JSON.stringify(data, null, 3)}</pre>\n                    : <></>\n                }\n            </>\n        } />\n    )\n}","import {\n    Row,\n    Col,\n    Image\n} from \"react-bootstrap\"\n\ninterface ZulaSubAccountProps {\n    displayName: string\n}\n\nexport default function ZulaSubAccount(props: ZulaSubAccountProps) {\n    return (\n        <Col xs={9} md={4}>\n            <Image width=\"175vw\" src=\"https://www.pngfind.com/pngs/m/610-6104451_image-placeholder-png-user-profile-placeholder-image-png.png\" roundedCircle />\n            <p>{props.displayName}</p>\n        </Col>\n    )\n}","import {\n    Row,\n    Container\n} from \"react-bootstrap\"\nimport { SubAccount } from \"../models\"\nimport ZulaSubAccount from \"./ZulaSubAccount\"\n\ninterface ZulaSubAccountListProps {\n    subAccounts: SubAccount[]\n}\n\nexport default function ZulaSubAccountList(props: ZulaSubAccountListProps) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n            {\n                props.subAccounts?\n                props.subAccounts.map((subAccount) => {\n                    return <ZulaSubAccount displayName={subAccount.displayName}/>\n                })\n                :<></>\n            }\n            </Row>\n        </Container>\n    )\n}","import { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\nimport ZulaLayoutThreeColumn from \"../components/ZulaLayoutThreeColumn\";\nimport ZulaSubAccountList from \"../components/ZulaSubAccountList\";\nimport { AccountsList } from \"../models\";\n\nexport default function Account() {\n    const [data, setData] = useState<AccountsList>()\n    const { REACT_APP_API_URL } = process.env;\n    useEffect(() => {\n        if (REACT_APP_API_URL) {\n            fetch(REACT_APP_API_URL+\"/accounts\")\n                .then(data => data.json())\n                .then(jsonData => setData(jsonData))\n                .catch(err => console.error(err))\n        }\n    }, [])\n    return (\n        <ZulaLayoutThreeColumn content={\n            <>\n                {\n                    data?\n                    <>\n                        {\n                            data.items.map((account) => <ZulaSubAccountList subAccounts={account.subAccounts}/>)\n                        }\n                    </>\n                    : <></>\n                }\n            </>\n        } />\n    )\n}","import {\n    Button,\n    Card\n} from \"react-bootstrap\"\nimport LinkContainer from \"react-router-bootstrap/lib/LinkContainer\"\nimport { BookTranslation } from \"../models\"\n\ninterface ZulaBookTranslationCardProps {\n    bookId: string\n    bookTranslation: BookTranslation\n}\n\nexport default function ZulaBookTranslationCard(props: ZulaBookTranslationCardProps) {\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRqNLdCR0Zd0hDxETHEO1Ot442TQ0exOlPPOQ&usqp=CAU\" />\n            <Card.Body>\n            <Card.Title>{props.bookTranslation.title}</Card.Title>\n            <Card.Text>\n                {props.bookTranslation.locale}\n            </Card.Text>\n            <LinkContainer to={`/read?id=${props.bookId}&locale=${props.bookTranslation.locale}`}><Button className=\"mx-1\" variant=\"link\">Read</Button></LinkContainer>\n            <Button className=\"mx-1\" variant=\"primary\">Buy</Button>\n            </Card.Body>\n        </Card>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport ZulaBookTranslationCard from \"../components/ZulaBookTranslationCard\";\nimport ZulaLayoutThreeColumn from \"../components/ZulaLayoutThreeColumn\";\nimport { BooksList } from \"../models\";\n\nexport default function Books() {\n    const [data, setData] = useState<BooksList>()\n    const { REACT_APP_API_URL } = process.env;\n    useEffect(() => {\n        if (REACT_APP_API_URL) {\n            fetch(REACT_APP_API_URL+\"/books\")\n                .then(data => data.json())\n                .then(jsonData => setData(jsonData))\n                .catch(error => console.error(error))\n        }\n    }, [])\n    return (\n        <ZulaLayoutThreeColumn content={\n            <>\n                {data ?\n                    data.items.map((book) => {\n                        return book.translations.map(\n                            (bookTranslation) => <ZulaBookTranslationCard bookId={book.id} bookTranslation={bookTranslation}/>\n                        )\n                    })\n                    : <></>\n                }\n            </>\n        } />\n    )\n}","import { listeners } from \"cluster\";\nimport { useEffect, useState } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport ZulaLayoutThreeColumn from \"../components/ZulaLayoutThreeColumn\";\nimport { Book, BookTranslation } from \"../models\";\n\n\nexport default function Read() {\n    const [data, setData] = useState<BookTranslation>()\n    const [index, setIndex] = useState(0);\n\n    const handleSelect = (selectedIndex: number, e: any) => {\n        setIndex(selectedIndex);\n    };\n\n    const query = new URLSearchParams(useLocation().search)\n    const id = query.get(\"id\")\n    const locale = query.get(\"locale\")\n\n    const { REACT_APP_API_URL } = process.env;\n    \n    useEffect(() => {\n        if (REACT_APP_API_URL) {\n            fetch(REACT_APP_API_URL+`/books/${id}`)\n                .then(data => data.json())\n                .then(jsonData => {\n                    const book = jsonData as Book\n                    for (const bookTranslation of book.translations) {\n                        if (bookTranslation.locale === locale){\n                            setData(bookTranslation)\n                            break\n                        }\n                    }\n                })\n                .catch(error => console.error(error))\n        }\n    }, [id, locale])\n    \n    return (\n        <ZulaLayoutThreeColumn content={\n            <>\n                {\n                    data ? \n                    <Carousel activeIndex={index} onSelect={handleSelect}>\n                        {data.content.map((bookImageLink) => {\n                            return (\n                                <Carousel.Item>\n                                    <img\n                                        width=\"100%\"\n                                        src={bookImageLink.uri}\n                                        alt=\"First slide\"\n                                    />\n                                </Carousel.Item>\n                            )\n                        })}\n                    </Carousel>\n                    : <></>\n                }\n            </>\n        } />\n    )\n}","import { useState } from \"react\";\nimport ZulaLayoutThreeColumn from \"../components/ZulaLayoutThreeColumn\";\nimport { JsonForms } from '@jsonforms/react';\n//import { vanillaCells, vanillaRenderers } from '@jsonforms/vanilla-renderers';\nimport { materialCells, materialRenderers } from '@jsonforms/material-renderers';\n\nconst schema = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"locale\": {\n            \"type\": \"string\",\n            \"enum\": [\n                \"fr\",\n                \"de\",\n                \"en\"\n            ]\n        },\n        \"title\": {\n            \"type\": \"string\"\n        },\n        \"content\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"order\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0\n                    },\n                    \"uri\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    },\n    \"required\": [\n        \"locale\",\n        \"title\",\n        \"content\"\n    ]\n}\n\nexport default function NewTranslation() {\n    const [data, setData] = useState()\n    return (\n        <ZulaLayoutThreeColumn content={\n            <>\n                <JsonForms\n                    schema={schema}\n                    data={data}\n                    renderers={materialRenderers}\n                    cells={materialCells}\n                    onChange={({ data }) => {\n                        console.log(data)\n                        setData(data)\n                    }}\n                />\n            </>\n        } />\n    )\n}","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createBrowserHistory } from 'history';\nimport Home from \"./pages/Home\"\nimport Account from \"./pages/Account\"\nimport Books from \"./pages/Books\"\nimport Read from \"./pages/Read\";\nimport NewTranslation from \"./pages/NewTranslation\";\n\nexport default function App() {\n  const history = createBrowserHistory();\n  \n  return (\n      <Router {...{ history }}>\n        <Switch>\n          <Route path=\"/books\">\n            <Books />\n          </Route>\n          <Route path=\"/account\">\n            <Account />\n          </Route>\n          <Route path=\"/read\">\n            <Read />\n          </Route>\n          <Route path=\"/new/translation\">\n            <NewTranslation />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}